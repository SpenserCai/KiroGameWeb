import{C as M,G as S,S as N,b as D,T as w,c as B}from"./pixi-DqqJAEqc.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();const O={board:{rows:8,cols:8,tileTypes:5},rendering:{tileSize:64,padding:8,boardOffsetX:50,boardOffsetY:100,canvasWidth:600,canvasHeight:700,backgroundColor:2899536,gridColor:3426654,selectionColor:15965202,selectionWidth:3},animation:{swapDuration:200,removeDuration:300,fallDuration:400,spawnDuration:200,maxConcurrentAnimations:20},scoring:{baseScore:10,comboMultiplier:1.5,match4Bonus:20,match5Bonus:50,specialTileMultiplier:2},timer:{defaultTime:60,warningTime:10},colors:{type0:16739179,type1:5164484,type2:16770669,type3:11069135,type4:13094634},assets:{images:{ghosts:["/assets/images/ghosts/ghost-red.png","/assets/images/ghosts/ghost-blue.png","/assets/images/ghosts/ghost-yellow.png","/assets/images/ghosts/ghost-green.png","/assets/images/ghosts/ghost-purple.png"],special:{bomb:"/assets/images/special/bomb.png",colorBomb:"/assets/images/special/color-bomb.png",rowClear:"/assets/images/special/row-clear.png",colClear:"/assets/images/special/col-clear.png"}}},specialTiles:{bomb:{matchLength:4,effectRange:1},colorBomb:{matchLength:5},lineClear:{matchType:"L_SHAPE"}},performance:{targetFPS:60,maxMemoryMB:100,matchDetectionTimeoutMS:5},particles:{enabled:!0,maxParticles:1e4,explosion:{count:25,lifetime:.5,speed:{min:100,max:200},gravity:200,size:{min:4,max:8}},combo:{baseCount:10,countPerCombo:10,lifetime:.8,speed:{min:150,max:300}},special:{bomb:{count:60,lifetime:.6,speed:{min:200,max:400}},colorBomb:{count:120,lifetime:1,speed:{min:100,max:300}},lineClear:{count:40,lifetime:.5,speed:{min:300,max:500}}},ambient:{count:15,lifetime:5,speed:{min:20,max:50}}},debug:{enabled:!1,showFPS:!1,showGrid:!0,logEvents:!1}},h={GAME_INIT:"game:init",GAME_START:"game:start",GAME_RESET:"game:reset",GAME_OVER:"game:over",TILE_SELECT:"tile:select",TILE_DESELECT:"tile:deselect",TILE_SWAP_START:"tile:swap:start",TILE_SWAP_COMPLETE:"tile:swap:complete",TILE_SWAP_REVERT:"tile:swap:revert",TILE_REMOVE_START:"tile:remove:start",TILE_REMOVE_COMPLETE:"tile:remove:complete",TILE_FALL_START:"tile:fall:start",TILE_FALL_COMPLETE:"tile:fall:complete",TILE_SPAWN_START:"tile:spawn:start",TILE_SPAWN_COMPLETE:"tile:spawn:complete",MATCH_FOUND:"match:found",MATCH_NONE:"match:none",SCORE_UPDATE:"score:update",COMBO_TRIGGER:"combo:trigger",STATE_CHANGE:"state:change",ANIMATION_START:"animation:start",ANIMATION_COMPLETE:"animation:complete",ANIMATION_QUEUE_EMPTY:"animation:queue:empty",INPUT_ENABLED:"input:enabled",INPUT_DISABLED:"input:disabled",BOARD_STABLE:"board:stable",BOARD_SHUFFLE:"board:shuffle",MOVES_NONE:"moves:none",TIMER_UPDATE:"timer:update",TIMER_WARNING:"timer:warning",ERROR:"error"};class k{constructor(){this.listeners=new Map,this.onceListeners=new Set,this.debug=!1}on(e,t){if(typeof e!="string"||!e)throw new Error("事件名称必须是非空字符串");if(typeof t!="function")throw new Error("回调必须是函数");return this.listeners.has(e)||this.listeners.set(e,new Set),this.listeners.get(e).add(t),this.debug&&console.log(`[EventBus] 订阅事件: ${e}`),()=>this.off(e,t)}off(e,t){if(!this.listeners.has(e))return;const i=this.listeners.get(e);i.delete(t),i.size===0&&this.listeners.delete(e),this.onceListeners.delete(t),this.debug&&console.log(`[EventBus] 取消订阅事件: ${e}`)}once(e,t){if(typeof e!="string"||!e)throw new Error("事件名称必须是非空字符串");if(typeof t!="function")throw new Error("回调必须是函数");const i=s=>{t(s),this.off(e,i)};return this.onceListeners.add(i),this.on(e,i)}emit(e,t=null){if(this.debug&&console.log(`[EventBus] 发布事件: ${e}`,t),!this.listeners.has(e))return;const i=this.listeners.get(e);Array.from(i).forEach(s=>{try{s(t)}catch(n){console.error(`[EventBus] 事件处理错误 (${e}):`,n),e!==h.ERROR&&this.emit(h.ERROR,{type:"EVENT_HANDLER_ERROR",message:`事件 ${e} 的处理器抛出错误`,error:n,eventName:e,data:t})}})}clear(){this.listeners.clear(),this.onceListeners.clear(),this.debug&&console.log("[EventBus] 清除所有监听器")}clearEvent(e){this.listeners.has(e)&&(this.listeners.delete(e),this.debug&&console.log(`[EventBus] 清除事件监听器: ${e}`))}listenerCount(e){return this.listeners.has(e)?this.listeners.get(e).size:0}eventNames(){return Array.from(this.listeners.keys())}enableDebug(){this.debug=!0,console.log("[EventBus] 调试模式已启用")}disableDebug(){this.debug=!1}}const g={MENU:"menu",PLAYING:"playing",PAUSED:"paused",GAME_OVER:"game_over",ANIMATING:"animating"};class G{constructor(e=g.MENU,t){this.currentState=e,this.previousState=null,this.eventBus=t,this.transitionRules=this._initTransitionRules(),this.stateEnterCallbacks=new Map,this.stateExitCallbacks=new Map}_initTransitionRules(){const e=new Map;return e.set(g.MENU,[g.PLAYING]),e.set(g.PLAYING,[g.ANIMATING,g.PAUSED,g.GAME_OVER]),e.set(g.ANIMATING,[g.PLAYING,g.GAME_OVER]),e.set(g.PAUSED,[g.PLAYING,g.MENU]),e.set(g.GAME_OVER,[g.MENU]),e}getCurrentState(){return this.currentState}getPreviousState(){return this.previousState}canTransition(e){const t=this.transitionRules.get(this.currentState);return t?t.includes(e):(console.warn(`未定义状态 ${this.currentState} 的转换规则`),!1)}setState(e,t={}){if(!Object.values(g).includes(e))return console.error(`无效的状态: ${e}`),!1;if(this.currentState===e)return!0;if(!this.canTransition(e))return console.warn(`无法从 ${this.currentState} 转换到 ${e}`),!1;const i=this.currentState;return this.onStateExit(i,t),this.previousState=i,this.currentState=e,this.onStateEnter(e,t),this.eventBus&&this.eventBus.emit(h.STATE_CHANGE,{from:i,to:e,data:t}),console.log(`🔄 状态转换: ${i} -> ${e}`),!0}onStateEnter(e,t){const i=this.stateEnterCallbacks.get(e);if(i)try{i(t)}catch(s){console.error(`状态进入回调错误 (${e}):`,s)}}onStateExit(e,t){const i=this.stateExitCallbacks.get(e);if(i)try{i(t)}catch(s){console.error(`状态退出回调错误 (${e}):`,s)}}registerEnterCallback(e,t){if(typeof t!="function")throw new Error("回调必须是函数");this.stateEnterCallbacks.set(e,t)}registerExitCallback(e,t){if(typeof t!="function")throw new Error("回调必须是函数");this.stateExitCallbacks.set(e,t)}isState(e){return this.currentState===e}isPlaying(){return this.currentState===g.PLAYING||this.currentState===g.ANIMATING}isPaused(){return this.currentState===g.PAUSED}isGameOver(){return this.currentState===g.GAME_OVER}isAnimating(){return this.currentState===g.ANIMATING}reset(){this.previousState=null,this.currentState=g.MENU,console.log("🔄 状态管理器已重置")}}class U{constructor(e,t,i,s,n,o=null,r=null){this.config=e,this.eventBus=t,this.boardManager=i,this.matchDetector=s,this.stateManager=n,this.animationController=o,this.specialTileManager=r,this.score=0,this.moves=0,this.comboCount=0,this.remainingTime=this.config.timer.defaultTime,this.isTimerRunning=!1,this.isProcessing=!1,this.handleSwap=this.handleSwap.bind(this)}setAnimationController(e){this.animationController=e}setSpecialTileManager(e){this.specialTileManager=e}init(){this.score=0,this.moves=0,this.comboCount=0,this.isProcessing=!1,this.remainingTime=this.config.timer.defaultTime,this.isTimerRunning=!1,this.setupEventListeners(),console.log("✅ GameEngine 初始化完成")}setupEventListeners(){this.eventBus.on(h.TILE_SWAP_START,this.handleSwap),this.eventBus.on(h.GAME_RESET,()=>this.reset()),this.eventBus.on("game:pause",()=>this.pause()),this.eventBus.on("game:resume",()=>this.resume()),this.eventBus.on("game:restart",()=>this.restart())}async handleSwap(e){const{tile1:t,tile2:i,pos1:s,pos2:n,sprite1:o,sprite2:r}=e;if(this.isProcessing){console.log("⚠️  正在处理中，忽略交换请求");return}if(!this.stateManager.isState(g.PLAYING)){console.log("⚠️  游戏未在进行中，忽略交换请求");return}this.isProcessing=!0,this.stateManager.setState(g.ANIMATING),this.eventBus.emit(h.INPUT_DISABLED);try{const a=t.isSpecial||i.isSpecial;this.boardManager.swapTiles(s,n);let l=[];if(t.isSpecial&&i.isSpecial&&this.specialTileManager){const d=this.specialTileManager.detectSpecialCombo(t,i);d&&(console.log(`💥 特殊图标组合: ${d.description}`),l=d.positions,this.eventBus.emit("special:combo:activated",{tile1:t,tile2:i,combo:d}))}else if(a&&this.specialTileManager){const d=t.isSpecial?t:i,p=t.isSpecial?i:t;l=this.specialTileManager.detectSpecialTileActivation(d,p),l.length>0&&(console.log(`⚡ 特殊图标激活: ${d.specialType}, 影响 ${l.length} 个图标`),this.eventBus.emit("special:tile:activated",{tile:d,targetTile:p,positions:l}))}if(this.eventBus.emit(h.TILE_SWAP_COMPLETE,{tile1:t,tile2:i,pos1:s,pos2:n}),this.animationController&&o&&r?await this.animationController.animateSwap(o,r,this.config.animation.swapDuration):await this.delay(this.config.animation.swapDuration),l.length>0){this.moves++,this.eventBus.emit("moves:update",{moves:this.moves});const d=t.isSpecial?t:i,p=this.specialTileManager.calculateSpecialBonus(d.specialType,l.length);this.score+=p,this.eventBus.emit(h.SCORE_UPDATE,{score:this.score,delta:p,combo:1,isSpecial:!0,specialType:d.specialType});const m=l.map(u=>this.boardManager.getTile(u.x,u.y)).filter(u=>u!==null);if(this.eventBus.emit(h.TILE_REMOVE_START,{tiles:m}),this.animationController&&this.renderEngine){const u=m.map(y=>this.renderEngine.getTileSprite(y.id)).filter(y=>y!==void 0);u.length>0&&await this.animationController.animateRemove(u,this.config.animation.removeDuration)}else await this.delay(this.config.animation.removeDuration);this.boardManager.removeTiles(l),this.eventBus.emit(h.TILE_REMOVE_COMPLETE,{tiles:m,positions:l}),this.comboCount=1,await this.processFallAndFill(this.renderEngine),await this.processMatches(this.renderEngine)}else{const d=this.matchDetector.findMatches(this.boardManager);d.length>0?(console.log(`✅ 发现匹配: ${d.length} 个`),this.moves++,this.eventBus.emit("moves:update",{moves:this.moves}),this.comboCount=1,await this.processMatches(this.renderEngine)):(console.log("❌ 无匹配，交换回原位置"),this.boardManager.swapTiles(s,n),this.eventBus.emit(h.TILE_SWAP_REVERT,{tile1:t,tile2:i,pos1:s,pos2:n}),this.animationController&&o&&r?await this.animationController.animateSwap(o,r,this.config.animation.swapDuration):await this.delay(this.config.animation.swapDuration),this.eventBus.emit(h.MATCH_NONE))}}catch(a){console.error("❌ 交换处理错误:",a),this.eventBus.emit(h.ERROR,{type:"SWAP_ERROR",message:"交换处理失败",error:a})}finally{this.isProcessing=!1,this.stateManager.isState(g.ANIMATING)&&this.stateManager.setState(g.PLAYING),this.eventBus.emit(h.INPUT_ENABLED)}}async processFallAndFill(e=null){const t=this.boardManager.applyGravity();if(t.length>0){if(this.eventBus.emit(h.TILE_FALL_START,{movements:t}),this.animationController&&e){const s=t.map(({tile:n,to:o})=>{const r=e.getTileSprite(n.id);if(r){const{y:a}=e.gridToScreen(o.x,o.y);return{sprite:r,targetY:a}}return null}).filter(n=>n!==null);s.length>0&&await this.animationController.animateFallBatch(s,this.config.animation.fallDuration)}else await this.delay(this.config.animation.fallDuration);this.eventBus.emit(h.TILE_FALL_COMPLETE,{movements:t})}const i=this.boardManager.fillBoard();if(i.length>0){if(this.eventBus.emit(h.TILE_SPAWN_START,{tiles:i}),this.animationController&&e){const s=i.map(n=>e.getTileSprite(n.id)).filter(n=>n!==void 0);s.length>0&&await this.animationController.animateSpawnBatch(s,this.config.animation.spawnDuration)}else await this.delay(this.config.animation.spawnDuration);this.eventBus.emit(h.TILE_SPAWN_COMPLETE,{tiles:i})}}async processMatches(e=null){let t=!0;for(;t;){const i=this.matchDetector.findMatches(this.boardManager);if(i.length===0){t=!1;break}let s=null;this.specialTileManager&&(s=this.specialTileManager.detectSpecialTileGeneration(i),s&&console.log(`🌟 检测到特殊图标生成: ${s.type} at (${s.position.x}, ${s.position.y})`));const n=i.reduce((m,u)=>m+u.tiles.length,0);this.eventBus.emit(h.MATCH_FOUND,{matches:i,totalTiles:n,comboCount:this.comboCount,specialTileInfo:s});const o=this.calculateScore(i,this.comboCount);this.score+=o.score,this.eventBus.emit(h.SCORE_UPDATE,{score:this.score,delta:o.score,combo:this.comboCount,basePoints:o.basePoints,multiplier:o.multiplier,tilesCleared:o.tilesCleared}),this.comboCount>1&&this.eventBus.emit(h.COMBO_TRIGGER,{comboCount:this.comboCount,multiplier:o.multiplier});const r=[],a=new Set;if(i.forEach(m=>{m.tiles.forEach(u=>{s&&u.x===s.position.x&&u.y===s.position.y||a.has(u.id)||(r.push(u),a.add(u.id))})}),this.eventBus.emit(h.TILE_REMOVE_START,{tiles:r}),this.animationController&&e){const m=r.map(u=>e.getTileSprite(u.id)).filter(u=>u!==void 0);m.length>0&&await this.animationController.animateRemove(m,this.config.animation.removeDuration)}else await this.delay(this.config.animation.removeDuration);const l=r.map(m=>({x:m.x,y:m.y}));if(this.boardManager.removeTiles(l),s){const{x:m,y:u}=s.position,y=this.boardManager.getTile(m,u);y&&(this.boardManager.createSpecialTile(m,u,s.type),this.eventBus.emit("special:tile:created",{tile:y,specialType:s.type,position:{x:m,y:u}}))}this.eventBus.emit(h.TILE_REMOVE_COMPLETE,{tiles:r,positions:l});const d=this.boardManager.applyGravity();if(d.length>0){if(this.eventBus.emit(h.TILE_FALL_START,{movements:d}),this.animationController&&e){const m=d.map(({tile:u,to:y})=>{const x=e.getTileSprite(u.id);if(x){const{y:_}=e.gridToScreen(y.x,y.y);return{sprite:x,targetY:_}}return null}).filter(u=>u!==null);m.length>0&&await this.animationController.animateFallBatch(m,this.config.animation.fallDuration)}else await this.delay(this.config.animation.fallDuration);this.eventBus.emit(h.TILE_FALL_COMPLETE,{movements:d})}const p=this.boardManager.fillBoard();if(p.length>0){if(this.eventBus.emit(h.TILE_SPAWN_START,{tiles:p}),this.animationController&&e){const m=p.map(u=>e.getTileSprite(u.id)).filter(u=>u!==void 0);m.length>0&&await this.animationController.animateSpawnBatch(m,this.config.animation.spawnDuration)}else await this.delay(this.config.animation.spawnDuration);this.eventBus.emit(h.TILE_SPAWN_COMPLETE,{tiles:p})}this.matchDetector.clearCache(),this.comboCount++}this.eventBus.emit(h.BOARD_STABLE),console.log(`✨ 匹配处理完成，连锁: ${this.comboCount-1} 次，总分: ${this.score}`),await this.checkAndHandleNoMoves()}async checkAndHandleNoMoves(){this.matchDetector.hasValidMoves(this.boardManager)||(console.log("⚠️  无可用移动，准备洗牌..."),this.eventBus.emit(h.MOVES_NONE),this.eventBus.emit("board:shuffle:start"),await this.delay(2e3),this.boardManager.shuffleBoard(),this.matchDetector.clearCache(),this.eventBus.emit(h.BOARD_SHUFFLE,{score:this.score,time:this.remainingTime}),console.log("🔀 洗牌完成"),this.matchDetector.hasValidMoves(this.boardManager)||(console.warn("⚠️  洗牌后仍无可用移动，再次洗牌"),await this.checkAndHandleNoMoves()))}calculateScore(e,t){const i=this.config.scoring.baseScore,s=this.config.scoring.comboMultiplier,n=this.config.scoring.match4Bonus,o=this.config.scoring.match5Bonus,r=e.reduce((p,m)=>p+m.tiles.length,0),a=r*i,l=Math.pow(s,t-1);let d=Math.floor(a*l);for(const p of e)p.tiles.length===4?d+=n:p.tiles.length>=5&&(d+=o);return{score:d,basePoints:a,multiplier:l,comboCount:t,tilesCleared:r}}checkGameOver(){return this.matchDetector.hasValidMoves(this.boardManager)?!1:(console.log("❌ 无可用移动"),this.eventBus.emit(h.MOVES_NONE),this.stateManager.setState(g.GAME_OVER,{reason:"no_moves",finalScore:this.score}),this.eventBus.emit(h.GAME_OVER,{reason:"no_moves",finalScore:this.score,moves:this.moves}),!0)}start(){this.stateManager.setState(g.PLAYING),this.startTimer(),this.eventBus.emit(h.GAME_START),this.eventBus.emit(h.INPUT_ENABLED),console.log("🚀 游戏开始！")}startTimer(){this.isTimerRunning=!0,this.remainingTime=this.config.timer.defaultTime,this.eventBus.emit("timer:update",{time:this.remainingTime}),console.log("⏱️  计时器启动")}pause(){this.stateManager.isState(g.PLAYING)&&(this.stateManager.setState(g.PAUSED),this.pauseTimer(),this.eventBus.emit(h.INPUT_DISABLED),console.log("⏸️  游戏暂停"))}resume(){this.stateManager.isState(g.PAUSED)&&(this.stateManager.setState(g.PLAYING),this.resumeTimer(),this.eventBus.emit(h.INPUT_ENABLED),console.log("▶️  游戏继续"))}pauseTimer(){this.isTimerRunning=!1,console.log("⏸️  计时器暂停")}resumeTimer(){this.isTimerRunning=!0,console.log("▶️  计时器恢复")}restart(){console.log("🔄 重新开始游戏..."),this.reset(),this.eventBus.emit("game:board:reset"),this.start()}reset(){this.score=0,this.moves=0,this.comboCount=0,this.isProcessing=!1,this.remainingTime=this.config.timer.defaultTime,this.isTimerRunning=!1,this.boardManager.createBoard(),this.boardManager.ensureNoInitialMatches(),this.matchDetector.clearCache(),this.stateManager.reset(),console.log("🔄 游戏已重置")}update(e){this.isTimerRunning&&this.stateManager.isState(g.PLAYING)&&(this.remainingTime-=e,this.eventBus.emit("timer:update",{time:Math.max(0,this.remainingTime)}),this.remainingTime<=0&&(this.remainingTime=0,this.isTimerRunning=!1,this.stateManager.setState(g.GAME_OVER,{reason:"time_up",finalScore:this.score}),this.eventBus.emit(h.GAME_OVER,{reason:"time_up",finalScore:this.score,moves:this.moves}),console.log("⏰ 时间到！游戏结束")))}delay(e){return new Promise(t=>setTimeout(t,e))}getGameData(){return{score:this.score,moves:this.moves,comboCount:this.comboCount,state:this.stateManager.getCurrentState()}}}const L={NORMAL:"normal",SELECTED:"selected",MATCHED:"matched",FALLING:"falling",SPAWNING:"spawning"},f={NONE:"none",BOMB:"bomb",COLOR_BOMB:"color_bomb",ROW_CLEAR:"row_clear",COL_CLEAR:"col_clear"};class R{constructor(e,t,i){this.type=e,this.x=t,this.y=i,this.id=R.generateId(),this.state=L.NORMAL,this.isSpecial=!1,this.specialType=f.NONE}static generateId(){return`tile_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}setPosition(e,t){this.x=e,this.y=t}setState(e){if(!Object.values(L).includes(e)){console.warn(`无效的图标状态: ${e}`);return}this.state=e}setSpecial(e){if(!Object.values(f).includes(e)){console.warn(`无效的特殊图标类型: ${e}`);return}this.isSpecial=!0,this.specialType=e}resetSpecial(){this.isSpecial=!1,this.specialType=f.NONE}isNormal(){return!this.isSpecial}clone(){const e=new R(this.type,this.x,this.y);return e.state=this.state,e.isSpecial=this.isSpecial,e.specialType=this.specialType,e}toString(){const e=this.isSpecial?` [${this.specialType}]`:"";return`Tile(type=${this.type}, pos=(${this.x},${this.y}), state=${this.state}${e})`}toJSON(){return{id:this.id,type:this.type,x:this.x,y:this.y,state:this.state,isSpecial:this.isSpecial,specialType:this.specialType}}}class F{constructor(e,t,i,s=null){this.rows=e,this.cols=t,this.tileTypes=i,this.matchDetector=s,this.grid=[]}createBoard(){this.grid=[];for(let e=0;e<this.rows;e++){this.grid[e]=[];for(let t=0;t<this.cols;t++){const i=this._getRandomType();this.grid[e][t]=new R(i,t,e)}}return this.grid}_getRandomType(){return Math.floor(Math.random()*this.tileTypes)}getTile(e,t){return this.isValidPosition(e,t)?this.grid[t][e]:null}setTile(e,t,i){if(!this.isValidPosition(e,t)){console.warn(`尝试在无效位置设置图标: (${e}, ${t})`);return}i&&i.setPosition(e,t),this.grid[t][e]=i}isValidPosition(e,t){return e>=0&&e<this.cols&&t>=0&&t<this.rows}isAdjacent(e,t){const i=Math.abs(e.x-t.x),s=Math.abs(e.y-t.y);return i===1&&s===0||i===0&&s===1}swapTiles(e,t){if(!this.isValidPosition(e.x,e.y)||!this.isValidPosition(t.x,t.y))return!1;const i=this.getTile(e.x,e.y),s=this.getTile(t.x,t.y);return!i||!s?!1:(this.setTile(e.x,e.y,s),this.setTile(t.x,t.y,i),!0)}removeTiles(e){e.forEach(t=>{this.isValidPosition(t.x,t.y)&&(this.grid[t.y][t.x]=null)})}getEmptyPositions(){const e=[];for(let t=0;t<this.rows;t++)for(let i=0;i<this.cols;i++)this.grid[t][i]===null&&e.push({x:i,y:t});return e}applyGravity(){const e=[];for(let t=0;t<this.cols;t++){let i=this.rows-1;for(let s=this.rows-1;s>=0;s--){const n=this.grid[s][t];if(n!==null){if(s!==i){const o={x:t,y:s},r={x:t,y:i};e.push({tile:n,from:o,to:r}),this.grid[i][t]=n,this.grid[s][t]=null,n.setPosition(t,i)}i--}}}return e}fillBoard(){const e=[];for(let t=0;t<this.cols;t++)for(let i=0;i<this.rows;i++)if(this.grid[i][t]===null){const s=this._getRandomType(),n=new R(s,t,i);this.grid[i][t]=n,e.push(n)}return e}ensureNoInitialMatches(){if(!this.matchDetector)return console.warn("未提供匹配检测器，跳过初始匹配检测"),!0;const e=100;let t=0;for(;t<e;){const i=this.matchDetector.findMatches(this);if(i.length===0)return!0;for(const s of i)for(const n of s.tiles){let o,r=!1;for(let a=0;a<this.tileTypes;a++)if(o=a,n.type=o,!this.wouldCreateMatch(n.x,n.y)){r=!0;break}r||(n.type=this._getRandomType())}t++}return console.warn("100次尝试后仍有初始匹配，重新生成棋盘"),this.createBoard(),this.ensureNoInitialMatches()}wouldCreateMatch(e,t){const i=this.getTile(e,t);if(!i||i.isSpecial)return!1;let s=1;for(let o=e-1;o>=0;o--){const r=this.getTile(o,t);if(r&&!r.isSpecial&&r.type===i.type)s++;else break}for(let o=e+1;o<this.cols;o++){const r=this.getTile(o,t);if(r&&!r.isSpecial&&r.type===i.type)s++;else break}if(s>=3)return!0;let n=1;for(let o=t-1;o>=0;o--){const r=this.getTile(e,o);if(r&&!r.isSpecial&&r.type===i.type)n++;else break}for(let o=t+1;o<this.rows;o++){const r=this.getTile(e,o);if(r&&!r.isSpecial&&r.type===i.type)n++;else break}return n>=3}shuffleBoard(){const e=[];for(let i=0;i<this.rows;i++)for(let s=0;s<this.cols;s++){const n=this.grid[i][s];n&&e.push(n.type)}for(let i=e.length-1;i>0;i--){const s=Math.floor(Math.random()*(i+1));[e[i],e[s]]=[e[s],e[i]]}let t=0;for(let i=0;i<this.rows;i++)for(let s=0;s<this.cols;s++){const n=this.grid[i][s];n&&(n.type=e[t++])}this.ensureNoInitialMatches()}createSpecialTile(e,t,i){if(!this.isValidPosition(e,t))return console.warn(`尝试在无效位置创建特殊图标: (${e}, ${t})`),null;const s=this.getTile(e,t);return s?(s.setSpecial(i),console.log(`✨ 创建特殊图标: ${i} at (${e}, ${t})`),s):null}clone(){const e=new F(this.rows,this.cols,this.tileTypes,this.matchDetector);e.grid=[];for(let t=0;t<this.rows;t++){e.grid[t]=[];for(let i=0;i<this.cols;i++){const s=this.grid[t][i];e.grid[t][i]=s?s.clone():null}}return e}toString(){let e=`
游戏板状态:
`;for(let t=0;t<this.rows;t++){for(let i=0;i<this.cols;i++){const s=this.grid[t][i];e+=s?s.type:"-",e+=" "}e+=`
`}return e}}class b{constructor(e,t){this.tiles=e,this.direction=t,this.length=e.length}getPositions(){return this.tiles.map(e=>({x:e.x,y:e.y}))}getType(){return this.tiles.length>0?this.tiles[0].type:-1}}class z{constructor(){this.validMovesCache=null,this.boardStateHash=null}findMatches(e){const t=[],i=new Set;return this.findHorizontalMatches(e).forEach(o=>{t.push(o),o.tiles.forEach(r=>i.add(`${r.x},${r.y}`))}),this.findVerticalMatches(e).forEach(o=>{t.push(o),o.tiles.forEach(r=>i.add(`${r.x},${r.y}`))}),t}findHorizontalMatches(e){const t=[];for(let i=0;i<e.rows;i++){let s=-1,n=[];for(let o=0;o<e.cols;o++){const r=e.getTile(o,i);if(!r||r.isSpecial){n.length>=3&&t.push(new b(n,"horizontal")),n=[],s=-1;continue}r.type===s?n.push(r):(n.length>=3&&t.push(new b(n,"horizontal")),n=[r],s=r.type)}n.length>=3&&t.push(new b(n,"horizontal"))}return t}findVerticalMatches(e){const t=[];for(let i=0;i<e.cols;i++){let s=-1,n=[];for(let o=0;o<e.rows;o++){const r=e.getTile(i,o);if(!r||r.isSpecial){n.length>=3&&t.push(new b(n,"vertical")),n=[],s=-1;continue}r.type===s?n.push(r):(n.length>=3&&t.push(new b(n,"vertical")),n=[r],s=r.type)}n.length>=3&&t.push(new b(n,"vertical"))}return t}checkMatchAtPosition(e,t,i){const s=e.getTile(t,i);if(!s||s.isSpecial)return!1;let n=1;for(let r=t-1;r>=0;r--){const a=e.getTile(r,i);if(a&&!a.isSpecial&&a.type===s.type)n++;else break}for(let r=t+1;r<e.cols;r++){const a=e.getTile(r,i);if(a&&!a.isSpecial&&a.type===s.type)n++;else break}if(n>=3)return!0;let o=1;for(let r=i-1;r>=0;r--){const a=e.getTile(t,r);if(a&&!a.isSpecial&&a.type===s.type)o++;else break}for(let r=i+1;r<e.rows;r++){const a=e.getTile(t,r);if(a&&!a.isSpecial&&a.type===s.type)o++;else break}return o>=3}hasValidMoves(e){const t=this.getBoardHash(e);if(this.validMovesCache!==null&&this.boardStateHash===t)return this.validMovesCache;const{rows:i,cols:s}=e;for(let n=0;n<i;n++)for(let o=0;o<s;o++){if(!e.getTile(o,n))continue;const a=[{x:o+1,y:n},{x:o,y:n+1}];for(const l of a){if(!e.isValidPosition(l.x,l.y)||!e.getTile(l.x,l.y))continue;e.swapTiles({x:o,y:n},l);const p=this.checkMatchAtPosition(e,o,n)||this.checkMatchAtPosition(e,l.x,l.y);if(e.swapTiles({x:o,y:n},l),p)return this.validMovesCache=!0,this.boardStateHash=t,!0}}return this.validMovesCache=!1,this.boardStateHash=t,!1}findPossibleMoves(e){const t=[],{rows:i,cols:s}=e;for(let n=0;n<i;n++)for(let o=0;o<s;o++){if(!e.getTile(o,n))continue;const a=[{x:o+1,y:n},{x:o,y:n+1}];for(const l of a){if(!e.isValidPosition(l.x,l.y)||!e.getTile(l.x,l.y))continue;e.swapTiles({x:o,y:n},l);const p=this.checkMatchAtPosition(e,o,n)||this.checkMatchAtPosition(e,l.x,l.y);e.swapTiles({x:o,y:n},l),p&&t.push({from:{x:o,y:n},to:l})}}return t}getBoardHash(e){let t="";for(let i=0;i<e.rows;i++)for(let s=0;s<e.cols;s++){const n=e.getTile(s,i);t+=n?n.type:"-"}return t}clearCache(){this.validMovesCache=null,this.boardStateHash=null}}class W{constructor(e,t){this.config=e,this.boardManager=t}detectSpecialTileGeneration(e){if(e.length===0)return null;const t=[...e].sort((s,n)=>n.length-s.length);for(const s of t){if(s.length>=5){const n=this._getMatchCenter(s);return{type:f.COLOR_BOMB,position:n,matchType:s.direction,matchLength:s.length}}if(s.length===4){const n=this._getMatchCenter(s);return{type:f.BOMB,position:n,matchType:s.direction,matchLength:s.length}}}const i=this._detectLShapeMatch(e);return i||null}_getMatchCenter(e){const t=e.tiles,i=Math.floor(t.length/2);return{x:t[i].x,y:t[i].y}}_detectLShapeMatch(e){if(e.length<2)return null;for(let t=0;t<e.length;t++)for(let i=t+1;i<e.length;i++){const s=e[t],n=e[i];if(s.direction===n.direction)continue;const o=this._findIntersection(s,n);if(o)return{type:s.direction==="horizontal"?f.ROW_CLEAR:f.COL_CLEAR,position:o,matchType:"L_SHAPE",matchLength:s.length+n.length}}return null}_findIntersection(e,t){for(const i of e.tiles)for(const s of t.tiles)if(i.x===s.x&&i.y===s.y)return{x:i.x,y:i.y};return null}createSpecialTile(e,t,i,s){const n=this.boardManager.getTile(t,i);return n?(n.setSpecial(s),n):null}detectSpecialTileActivation(e,t=null){if(!e.isSpecial)return[];let i=[];switch(e.specialType){case f.BOMB:i=this._getBombRange(e.x,e.y);break;case f.COLOR_BOMB:i=this._getColorBombTargets(t),i.push({x:e.x,y:e.y});break;case f.ROW_CLEAR:i=this._getRowTargets(e.y);break;case f.COL_CLEAR:i=this._getColTargets(e.x);break;default:return[]}return i}_getBombRange(e,t){const i=[],s=this.config.specialTiles.bomb.effectRange;for(let n=-s;n<=s;n++)for(let o=-s;o<=s;o++){const r=e+o,a=t+n;this.boardManager.isValidPosition(r,a)&&i.push({x:r,y:a})}return i}_getColorBombTargets(e){if(!e)return[];const t=[],i=e.type;for(let s=0;s<this.boardManager.rows;s++)for(let n=0;n<this.boardManager.cols;n++){const o=this.boardManager.getTile(n,s);o&&o.type===i&&t.push({x:n,y:s})}return t}_getRowTargets(e){const t=[];for(let i=0;i<this.boardManager.cols;i++)this.boardManager.getTile(i,e)&&t.push({x:i,y:e});return t}_getColTargets(e){const t=[];for(let i=0;i<this.boardManager.rows;i++)this.boardManager.getTile(e,i)&&t.push({x:e,y:i});return t}detectSpecialCombo(e,t){if(!e.isSpecial||!t.isSpecial)return null;const i={type:"combo",positions:[],multiplier:5};if(e.specialType===f.BOMB&&t.specialType===f.BOMB)i.positions=this._getLargeExplosion(e.x,e.y,2),i.description="双炸弹组合：5x5爆炸";else if(e.specialType===f.BOMB&&(t.specialType===f.ROW_CLEAR||t.specialType===f.COL_CLEAR)||t.specialType===f.BOMB&&(e.specialType===f.ROW_CLEAR||e.specialType===f.COL_CLEAR)){const s=e.specialType===f.BOMB?t:e,n=e.specialType===f.BOMB?e:t;s.specialType===f.ROW_CLEAR?(i.positions=this._getMultipleRows(n.y,1),i.description="炸弹+横向消除：3行爆炸"):(i.positions=this._getMultipleCols(n.x,1),i.description="炸弹+纵向消除：3列爆炸")}else if(e.specialType===f.COLOR_BOMB||t.specialType===f.COLOR_BOMB){i.type="color_bomb_combo",i.description="彩色炸弹组合：超级爆炸";for(let s=0;s<this.boardManager.rows;s++)for(let n=0;n<this.boardManager.cols;n++)this.boardManager.getTile(n,s)&&i.positions.push({x:n,y:s})}else if(e.specialType===f.ROW_CLEAR&&t.specialType===f.COL_CLEAR||e.specialType===f.COL_CLEAR&&t.specialType===f.ROW_CLEAR){const s=e.specialType===f.ROW_CLEAR?e:t,n=e.specialType===f.COL_CLEAR?e:t;i.positions=[...this._getRowTargets(s.y),...this._getColTargets(n.x)],i.description="十字消除：整行+整列"}return i.positions.length>0?i:null}_getLargeExplosion(e,t,i){const s=[];for(let n=-i;n<=i;n++)for(let o=-i;o<=i;o++){const r=e+o,a=t+n;this.boardManager.isValidPosition(r,a)&&s.push({x:r,y:a})}return s}_getMultipleRows(e,t){const i=[];for(let s=-t;s<=t;s++){const n=e+s;n>=0&&n<this.boardManager.rows&&i.push(...this._getRowTargets(n))}return i}_getMultipleCols(e,t){const i=[];for(let s=-t;s<=t;s++){const n=e+s;n>=0&&n<this.boardManager.cols&&i.push(...this._getColTargets(n))}return i}calculateSpecialBonus(e,t){const i=this.config.scoring.baseScore;this.config.scoring.specialTileMultiplier;let s=0;switch(e){case f.BOMB:s=t*i*2;break;case f.COLOR_BOMB:s=t*i*5;break;case f.ROW_CLEAR:case f.COL_CLEAR:s=t*i*3;break}return Math.floor(s)}}class H{constructor(e){this.sprite=e,this.velocity={x:0,y:0},this.acceleration={x:0,y:0},this.lifetime=1,this.age=0,this.initialScale=1,this.initialAlpha=1,this.isAlive=!0}init(e){const{x:t=0,y:i=0,velocityX:s=0,velocityY:n=0,accelerationX:o=0,accelerationY:r=0,lifetime:a=1,scale:l=1,alpha:d=1,tint:p=16777215}=e;this.sprite.position.set(t,i),this.velocity.x=s,this.velocity.y=n,this.acceleration.x=o,this.acceleration.y=r,this.lifetime=a,this.age=0,this.initialScale=l,this.initialAlpha=d,this.sprite.scale.set(l),this.sprite.alpha=d,this.sprite.tint=p,this.sprite.visible=!0,this.isAlive=!0}update(e){if(!this.isAlive)return!0;if(this.age+=e,this.age>=this.lifetime)return this.isAlive=!1,this.sprite.visible=!1,!0;this.velocity.x+=this.acceleration.x*e,this.velocity.y+=this.acceleration.y*e,this.sprite.x+=this.velocity.x*e,this.sprite.y+=this.velocity.y*e;const t=this.age/this.lifetime;return this.sprite.alpha=this.initialAlpha*(1-t),this.sprite.scale.set(this.initialScale*(1-t*.8)),!1}reset(){this.sprite.visible=!1,this.velocity.x=0,this.velocity.y=0,this.acceleration.x=0,this.acceleration.y=0,this.age=0,this.isAlive=!1}}class C{constructor(e){this.config=e,this.particles=[],this.isActive=!0,this.age=0}emit(e,t){for(let i=0;i<e;i++){const s=t();s&&this.particles.push(s)}}update(e){if(!this.isActive)return!0;this.age+=e;for(let t=this.particles.length-1;t>=0;t--)this.particles[t].update(e)&&this.particles.splice(t,1);return this.particles.length===0?(this.isActive=!1,!0):!1}destroy(){this.particles.forEach(e=>e.reset()),this.particles=[],this.isActive=!1}getActiveCount(){return this.particles.length}}class V{constructor(e={}){var t,i;this.config=e,this.enabled=((t=e.debug)==null?void 0:t.enabled)||!1,this.showFPS=((i=e.debug)==null?void 0:i.showFPS)||!1,this.fps=0,this.frameTime=0,this.avgFrameTime=0,this.minFPS=1/0,this.maxFPS=0,this.frameTimeHistory=[],this.historySize=60,this.memoryUsage=0,this.peakMemoryUsage=0,this.lastTime=performance.now(),this.startTime=this.lastTime,this.totalFrames=0,this.droppedFrames=0,this.statsElement=null,this.fpsWarningThreshold=30,this.memoryWarningThreshold=100*1024*1024}init(){this.enabled&&(this.showFPS&&this.createStatsUI(),console.log("📊 性能监控器已启动"))}createStatsUI(){this.statsElement=document.createElement("div"),this.statsElement.id="performance-stats",this.statsElement.style.cssText=`
      position: fixed;
      top: 10px;
      right: 10px;
      background: rgba(0, 0, 0, 0.8);
      color: #0f0;
      font-family: 'Courier New', monospace;
      font-size: 12px;
      padding: 10px;
      border-radius: 5px;
      z-index: 9999;
      min-width: 150px;
      pointer-events: none;
    `,document.body.appendChild(this.statsElement)}update(e){if(!this.enabled)return;const t=performance.now();this.frameTime=t-this.lastTime,this.lastTime=t,this.fps=1e3/this.frameTime,this.totalFrames++,this.fps<this.minFPS&&(this.minFPS=this.fps),this.fps>this.maxFPS&&(this.maxFPS=this.fps),this.fps<this.fpsWarningThreshold&&this.droppedFrames++,this.frameTimeHistory.push(this.frameTime),this.frameTimeHistory.length>this.historySize&&this.frameTimeHistory.shift(),this.avgFrameTime=this.frameTimeHistory.reduce((i,s)=>i+s,0)/this.frameTimeHistory.length,performance.memory&&(this.memoryUsage=performance.memory.usedJSHeapSize,this.memoryUsage>this.peakMemoryUsage&&(this.peakMemoryUsage=this.memoryUsage),this.memoryUsage>this.memoryWarningThreshold&&console.warn(`⚠️  内存使用过高: ${this.formatBytes(this.memoryUsage)}`)),this.showFPS&&this.statsElement&&this.updateStatsUI()}updateStatsUI(){if(!this.statsElement)return;const e=this.fps>=55?"#0f0":this.fps>=30?"#ff0":"#f00",t=this.memoryUsage/(1024*1024),i=this.peakMemoryUsage/(1024*1024);let s=`
      <div style="color: ${e}; font-weight: bold;">
        FPS: ${this.fps.toFixed(1)}
      </div>
      <div style="color: #aaa; font-size: 10px;">
        Frame: ${this.frameTime.toFixed(2)}ms
      </div>
      <div style="color: #aaa; font-size: 10px;">
        Avg: ${this.avgFrameTime.toFixed(2)}ms
      </div>
    `;performance.memory&&(s+=`
        <div style="color: #aaa; font-size: 10px; margin-top: 5px;">
          Memory: ${t.toFixed(1)}MB
        </div>
        <div style="color: #aaa; font-size: 10px;">
          Peak: ${i.toFixed(1)}MB
        </div>
      `),s+=`
      <div style="color: #aaa; font-size: 10px; margin-top: 5px;">
        Frames: ${this.totalFrames}
      </div>
      <div style="color: #aaa; font-size: 10px;">
        Dropped: ${this.droppedFrames}
      </div>
    `,this.statsElement.innerHTML=s}getMetrics(){return{fps:this.fps,frameTime:this.frameTime,avgFrameTime:this.avgFrameTime,minFPS:this.minFPS,maxFPS:this.maxFPS,memoryUsage:this.memoryUsage,peakMemoryUsage:this.peakMemoryUsage,totalFrames:this.totalFrames,droppedFrames:this.droppedFrames,uptime:performance.now()-this.startTime}}printReport(){const e=this.getMetrics(),t=e.uptime/1e3;console.log(`
📊 性能报告`),console.log("═══════════════════════════════════"),console.log(`运行时间: ${t.toFixed(2)}秒`),console.log(`总帧数: ${e.totalFrames}`),console.log(`平均FPS: ${(e.totalFrames/t).toFixed(2)}`),console.log(`最低FPS: ${e.minFPS.toFixed(2)}`),console.log(`最高FPS: ${e.maxFPS.toFixed(2)}`),console.log(`平均帧时间: ${e.avgFrameTime.toFixed(2)}ms`),console.log(`掉帧数: ${e.droppedFrames} (${(e.droppedFrames/e.totalFrames*100).toFixed(2)}%)`),performance.memory&&(console.log(`当前内存: ${this.formatBytes(e.memoryUsage)}`),console.log(`峰值内存: ${this.formatBytes(e.peakMemoryUsage)}`)),console.log(`═══════════════════════════════════
`)}reset(){this.fps=0,this.frameTime=0,this.avgFrameTime=0,this.minFPS=1/0,this.maxFPS=0,this.frameTimeHistory=[],this.totalFrames=0,this.droppedFrames=0,this.memoryUsage=0,this.peakMemoryUsage=0,this.lastTime=performance.now(),this.startTime=this.lastTime}formatBytes(e){if(e===0)return"0 B";const t=1024,i=["B","KB","MB","GB"],s=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,s)).toFixed(2))+" "+i[s]}destroy(){this.statsElement&&this.statsElement.parentNode&&(this.statsElement.parentNode.removeChild(this.statsElement),this.statsElement=null)}}class ${constructor(e,t,i=10){this.factory=e,this.reset=t,this.pool=[],this.activeObjects=new Set;for(let s=0;s<i;s++)this.pool.push(this.factory())}acquire(){let e;return this.pool.length>0?e=this.pool.pop():e=this.factory(),this.activeObjects.add(e),e}release(e){if(!this.activeObjects.has(e)){console.warn("Trying to release an object that is not active");return}this.activeObjects.delete(e),this.reset(e),this.pool.push(e)}releaseAll(){this.activeObjects.forEach(e=>{this.reset(e),this.pool.push(e)}),this.activeObjects.clear()}getStats(){return{poolSize:this.pool.length,activeCount:this.activeObjects.size,totalCount:this.pool.length+this.activeObjects.size}}clear(){this.pool=[],this.activeObjects.clear()}}class Y{constructor(e,t){this.app=e,this.config=t,this.particleContainer=new M,this.particleContainer.label="particleContainer",this.emitters=[],this.particlePool=new $(()=>this._createParticleSprite(),i=>i.reset(),50),this.stats={totalParticles:0,activeParticles:0,emittersCount:0}}_createParticleSprite(){const e=new S;e.beginFill(16777215),e.drawCircle(0,0,4),e.endFill();const t=this.app.renderer.generateTexture(e),i=new N(t);return i.anchor.set(.5),this.particleContainer.addChild(i),new H(i)}_acquireParticle(){return this.particlePool.acquire()}_releaseParticle(e){this.particlePool.release(e)}createExplosion(e,t,i,s=25){var a;if(!((a=this.config.particles)!=null&&a.enabled))return;const n=this.config.particles.explosion,o=new C({type:"explosion"}),r=typeof i=="string"?parseInt(i.replace("#",""),16):i;o.emit(s,()=>{const l=this._acquireParticle(),d=Math.random()*Math.PI*2,p=n.speed.min+Math.random()*(n.speed.max-n.speed.min),m=Math.cos(d)*p,u=Math.sin(d)*p,x=(n.size.min+Math.random()*(n.size.max-n.size.min))/8;return l.init({x:e,y:t,velocityX:m,velocityY:u,accelerationX:0,accelerationY:n.gravity,lifetime:n.lifetime,scale:x,alpha:1,tint:r}),this.stats.totalParticles++,l}),this.emitters.push(o),this.stats.emittersCount++}createComboBurst(e){var a;if(!((a=this.config.particles)!=null&&a.enabled))return;const t=this.config.particles.combo,i=new C({type:"combo"}),s=Math.min(t.baseCount+(e-1)*t.countPerCombo,100),n=this.app.screen.width/2,o=this.app.screen.height/2,r=[16711680,16744192,16776960,65280,255,4915330,9699539];i.emit(s,()=>{const l=this._acquireParticle(),d=i.particles.length,p=d/s*Math.PI*2*3,m=t.speed.min+Math.random()*(t.speed.max-t.speed.min),u=Math.cos(p)*m,y=Math.sin(p)*m,x=Math.floor(d/s*r.length),_=r[x];return l.init({x:n,y:o,velocityX:u,velocityY:y,accelerationX:0,accelerationY:0,lifetime:t.lifetime,scale:1+e*.1,alpha:1,tint:_}),this.stats.totalParticles++,l}),this.emitters.push(i),this.stats.emittersCount++}createSpecialActivation(e,t,i){var n;if(!((n=this.config.particles)!=null&&n.enabled))return;const s=this.config.particles.special;switch(e){case"bomb":this._createBombEffect(t,i,s.bomb);break;case"color-bomb":this._createColorBombEffect(s.colorBomb);break;case"row-clear":this._createLineClearEffect(t,i,"horizontal",s.lineClear);break;case"col-clear":this._createLineClearEffect(t,i,"vertical",s.lineClear);break}}_createBombEffect(e,t,i){const s=new C({type:"bomb"}),n=[16729344,16737095,16747520,16753920];s.emit(i.count,()=>{const o=this._acquireParticle(),r=Math.random()*Math.PI*2,a=i.speed.min+Math.random()*(i.speed.max-i.speed.min),l=Math.cos(r)*a,d=Math.sin(r)*a,p=n[Math.floor(Math.random()*n.length)];return o.init({x:e,y:t,velocityX:l,velocityY:d,accelerationX:0,accelerationY:100,lifetime:i.lifetime,scale:1.2,alpha:1,tint:p}),this.stats.totalParticles++,o}),this.emitters.push(s),this.stats.emittersCount++}_createColorBombEffect(e){const t=new C({type:"colorBomb"}),i=[16711680,16744192,16776960,65280,255,4915330,9699539];t.emit(e.count,()=>{const s=this._acquireParticle(),n=Math.random()*this.app.screen.width,o=-20,r=e.speed.min+Math.random()*(e.speed.max-e.speed.min),a=i[Math.floor(Math.random()*i.length)];return s.init({x:n,y:o,velocityX:(Math.random()-.5)*50,velocityY:r,accelerationX:0,accelerationY:50,lifetime:e.lifetime,scale:1.5,alpha:1,tint:a}),this.stats.totalParticles++,s}),this.emitters.push(t),this.stats.emittersCount++}_createLineClearEffect(e,t,i,s){const n=new C({type:"lineClear"}),o=[49151,8900331,16777215,11393254];n.emit(s.count,()=>{const r=this._acquireParticle(),a=s.speed.min+Math.random()*(s.speed.max-s.speed.min);let l,d;i==="horizontal"?(l=(Math.random()>.5?1:-1)*a,d=(Math.random()-.5)*50):(l=(Math.random()-.5)*50,d=(Math.random()>.5?1:-1)*a);const p=o[Math.floor(Math.random()*o.length)];return r.init({x:e,y:t,velocityX:l,velocityY:d,accelerationX:0,accelerationY:0,lifetime:s.lifetime,scale:1,alpha:1,tint:p}),this.stats.totalParticles++,r}),this.emitters.push(n),this.stats.emittersCount++}update(e){const t=e/1e3;for(let i=this.emitters.length-1;i>=0;i--){const s=this.emitters[i];s.update(t)&&(s.particles.forEach(o=>{this._releaseParticle(o)}),s.destroy(),this.emitters.splice(i,1),this.stats.emittersCount--)}this.stats.activeParticles=this.emitters.reduce((i,s)=>i+s.getActiveCount(),0)}clear(){this.emitters.forEach(e=>{e.particles.forEach(t=>{this._releaseParticle(t)}),e.destroy()}),this.emitters=[],this.stats.emittersCount=0,this.stats.activeParticles=0}getStats(){return{...this.stats}}destroy(){this.clear(),this.particleContainer.destroy({children:!0})}}class j{constructor(e,t,i){this.container=e,this.config=t||O,this.eventBus=i,this.app=null,this.layers={background:null,board:null,effects:null,ui:null},this.tileSprites=new Map,this.selectionGraphics=null,this.particleEffects=null,this.isInitialized=!1}async init(){try{return this.app=new D,await this.app.init({width:this.config.rendering.canvasWidth,height:this.config.rendering.canvasHeight,backgroundColor:this.config.rendering.backgroundColor,antialias:!0,resolution:window.devicePixelRatio||1,autoDensity:!0}),this.container.appendChild(this.app.canvas),this.createLayers(),this.createBackground(),this.particleEffects=new Y(this.app,this.config),this.app.stage.addChild(this.particleEffects.particleContainer),this.app.ticker.add(e=>{this.particleEffects&&this.particleEffects.update(e.deltaMS)}),window.addEventListener("resize",()=>this.resize()),this.isInitialized=!0,console.log("✅ RenderEngine 初始化完成"),!0}catch(e){throw console.error("❌ RenderEngine 初始化失败:",e),e}}createLayers(){this.layers.background=new M,this.layers.background.label="backgroundLayer",this.app.stage.addChild(this.layers.background),this.layers.board=new M,this.layers.board.label="boardLayer",this.app.stage.addChild(this.layers.board),this.layers.effects=new M,this.layers.effects.label="effectLayer",this.app.stage.addChild(this.layers.effects),this.layers.ui=new M,this.layers.ui.label="uiLayer",this.app.stage.addChild(this.layers.ui),console.log("✅ 场景图层创建完成")}createBackground(){const e=new S,{rows:t,cols:i}=this.config.board,{tileSize:s,padding:n,boardOffsetX:o,boardOffsetY:r,gridColor:a}=this.config.rendering;for(let l=0;l<t;l++)for(let d=0;d<i;d++){const p=d*s+o,m=l*s+r;e.rect(p,m,s,s),e.fill({color:a,alpha:.3}),e.stroke({color:a,width:1,alpha:.5})}this.layers.background.addChild(e),console.log("✅ 背景网格创建完成")}gridToScreen(e,t){const{tileSize:i,boardOffsetX:s,boardOffsetY:n}=this.config.rendering;return{x:e*i+s+i/2,y:t*i+n+i/2}}screenToGrid(e,t){const{tileSize:i,boardOffsetX:s,boardOffsetY:n}=this.config.rendering;return{x:Math.floor((e-s)/i),y:Math.floor((t-n)/i)}}resize(){if(!this.app)return;const e=this.container,{canvasWidth:t,canvasHeight:i}=this.config.rendering,s=e.clientWidth/t,n=e.clientHeight/i,o=Math.min(s,n);this.app.renderer.resize(t*o,i*o),this.app.stage.scale.set(o),console.log(`🔄 画布大小调整: ${t*o}x${i*o}`)}highlightTile(e){this.selectionGraphics||(this.selectionGraphics=new S,this.layers.effects.addChild(this.selectionGraphics));const{x:t,y:i}=this.gridToScreen(e.x,e.y),{tileSize:s,selectionColor:n,selectionWidth:o}=this.config.rendering;this.selectionGraphics.clear(),this.selectionGraphics.rect(t-s/2,i-s/2,s,s),this.selectionGraphics.stroke({color:n,width:o})}unhighlightTile(){this.selectionGraphics&&this.selectionGraphics.clear()}createTileSprite(e,t){const i=e.isSpecial?e.specialType:`type${e.type}`,s=t.getTexture(i);if(!s)throw new Error(`Texture not found for key: ${i}`);const n=new N(s);n.anchor.set(.5);const o=this.config.rendering.tileSize,r=Math.max(s.width,s.height),a=o/r;n.scale.set(a),n.alpha=1;const{x:l,y:d}=this.gridToScreen(e.x,e.y);return n.position.set(l,d),n.eventMode="static",n.cursor="pointer",n.tileData=e,n.normalScale=a,this.layers.board.addChild(n),this.tileSprites.set(e.id,n),n}updateTileSprite(e,t,i=null){const{x:s,y:n}=this.gridToScreen(t.x,t.y);if(e.position.set(s,n),e.tileData=t,i){const o=t.isSpecial?t.specialType:`type${t.type}`,r=i.getTexture(o);r&&e.texture!==r&&(e.texture=r,console.log(`🔄 更新精灵纹理: ${o}`))}}removeTileSprite(e){const t=this.tileSprites.get(e);t&&(this.layers.board.removeChild(t),t.destroy(),this.tileSprites.delete(e))}renderBoard(e,t){this.tileSprites.forEach((i,s)=>{this.layers.board.removeChild(i),i.destroy()}),this.tileSprites.clear();for(let i=0;i<e.rows;i++)for(let s=0;s<e.cols;s++){const n=e.getTile(s,i);n&&this.createTileSprite(n,t)}console.log(`✅ 游戏板渲染完成: ${this.tileSprites.size} 个精灵`)}getTileSprite(e){return this.tileSprites.get(e)}createUI(){this.scoreText=new w({text:"分数: 0",style:{fontFamily:"Arial, sans-serif",fontSize:28,fontWeight:"bold",fill:16777215,stroke:{color:0,width:3}}}),this.scoreText.position.set(20,20),this.layers.ui.addChild(this.scoreText),this.config.debug.showFPS&&(this.fpsText=new w({text:"FPS: 60",style:{fontFamily:"Arial, sans-serif",fontSize:16,fill:65280,stroke:{color:0,width:2}}}),this.fpsText.anchor.set(1,0),this.fpsText.position.set(this.config.rendering.canvasWidth-20,this.config.rendering.canvasHeight-30),this.layers.ui.addChild(this.fpsText)),this.timerText=new w({text:"时间: 60",style:{fontFamily:"Arial, sans-serif",fontSize:28,fontWeight:"bold",fill:16777215,stroke:{color:0,width:3}}}),this.timerText.anchor.set(1,0),this.timerText.position.set(this.config.rendering.canvasWidth-20,20),this.layers.ui.addChild(this.timerText),this.movesText=new w({text:"移动: 0",style:{fontFamily:"Arial, sans-serif",fontSize:24,fill:16777215,stroke:{color:0,width:2}}}),this.movesText.position.set(20,60),this.layers.ui.addChild(this.movesText),this.pauseButton=this.createButton("暂停",this.config.rendering.canvasWidth/2-50,20,100,40),this.pauseButton.on("pointerdown",()=>{this.eventBus.emit("game:pause"),this.showPauseMenu()}),this.layers.ui.addChild(this.pauseButton),console.log("✅ UI 元素创建完成")}createButton(e,t,i,s,n){const o=new M;o.position.set(t,i),o.eventMode="static",o.cursor="pointer";const r=new S;r.roundRect(0,0,s,n,8),r.fill({color:3447003,alpha:.9}),r.stroke({color:2719929,width:2}),o.addChild(r);const a=new w({text:e,style:{fontFamily:"Arial, sans-serif",fontSize:18,fontWeight:"bold",fill:16777215}});return a.anchor.set(.5),a.position.set(s/2,n/2),o.addChild(a),o.on("pointerover",()=>{r.clear(),r.roundRect(0,0,s,n,8),r.fill({color:6139362,alpha:1}),r.stroke({color:2719929,width:2})}),o.on("pointerout",()=>{r.clear(),r.roundRect(0,0,s,n,8),r.fill({color:3447003,alpha:.9}),r.stroke({color:2719929,width:2})}),o.on("pointerdown",()=>{o.scale.set(.95)}),o.on("pointerup",()=>{o.scale.set(1)}),o}updateScore(e){this.scoreText&&(this.scoreText.text=`分数: ${e}`)}updateTimer(e){if(this.timerText){const t=Math.floor(e/60),i=Math.floor(e%60);this.timerText.text=`时间: ${t}:${i.toString().padStart(2,"0")}`,e<=this.config.timer.warningTime?this.timerText.style.fill=16711680:this.timerText.style.fill=16777215}}updateMoves(e){this.movesText&&(this.movesText.text=`移动: ${e}`)}updateFPS(e){this.fpsText&&(this.fpsText.text=`FPS: ${Math.round(e)}`)}showScoreDelta(e,t,i){const s=new w({text:`+${e}`,style:{fontFamily:"Arial, sans-serif",fontSize:24,fontWeight:"bold",fill:16766720,stroke:{color:0,width:3}}});s.anchor.set(.5),s.position.set(t,i),this.layers.effects.addChild(s);let n=0;const o=1e3,r=i,a=l=>{n+=l;const d=n/o;if(d>=1){this.layers.effects.removeChild(s),s.destroy();return}s.position.y=r-d*50,s.alpha=1-d};this.app.ticker.add(a)}createStartMenu(){const e=new M;e.label="startMenu";const t=new S;t.rect(0,0,this.config.rendering.canvasWidth,this.config.rendering.canvasHeight),t.fill({color:0,alpha:.7}),e.addChild(t);const i=new w({text:"小鬼消消乐",style:{fontFamily:"Arial, sans-serif",fontSize:48,fontWeight:"bold",fill:16766720,stroke:{color:0,width:5}}});i.anchor.set(.5),i.position.set(this.config.rendering.canvasWidth/2,200),e.addChild(i);const s=this.createButton("开始游戏",this.config.rendering.canvasWidth/2-75,350,150,50);s.on("pointerdown",()=>{this.eventBus.emit("game:start")}),e.addChild(s),this.startMenu=e,this.layers.ui.addChild(e)}hideStartMenu(){this.startMenu&&(this.layers.ui.removeChild(this.startMenu),this.startMenu.destroy({children:!0}),this.startMenu=null)}createPauseMenu(){const e=new M;e.label="pauseMenu";const t=new S;t.rect(0,0,this.config.rendering.canvasWidth,this.config.rendering.canvasHeight),t.fill({color:0,alpha:.7}),e.addChild(t);const i=new w({text:"游戏暂停",style:{fontFamily:"Arial, sans-serif",fontSize:48,fontWeight:"bold",fill:16777215,stroke:{color:0,width:5}}});i.anchor.set(.5),i.position.set(this.config.rendering.canvasWidth/2,200),e.addChild(i);const s=this.createButton("继续游戏",this.config.rendering.canvasWidth/2-75,300,150,50);s.on("pointerdown",()=>{this.hidePauseMenu(),this.eventBus.emit("game:resume")}),e.addChild(s);const n=this.createButton("重新开始",this.config.rendering.canvasWidth/2-75,370,150,50);n.on("pointerdown",()=>{this.hidePauseMenu(),this.eventBus.emit("game:restart")}),e.addChild(n),this.pauseMenu=e,this.layers.ui.addChild(e)}showPauseMenu(){this.pauseMenu||this.createPauseMenu()}hidePauseMenu(){this.pauseMenu&&(this.layers.ui.removeChild(this.pauseMenu),this.pauseMenu.destroy({children:!0}),this.pauseMenu=null)}createGameOverUI(e){const t=new M;t.label="gameOverMenu";const i=new S;i.rect(0,0,this.config.rendering.canvasWidth,this.config.rendering.canvasHeight),i.fill({color:0,alpha:.8}),t.addChild(i);const s=new w({text:"游戏结束",style:{fontFamily:"Arial, sans-serif",fontSize:48,fontWeight:"bold",fill:16739179,stroke:{color:0,width:5}}});s.anchor.set(.5),s.position.set(this.config.rendering.canvasWidth/2,150),t.addChild(s);const n=new w({text:`最终分数: ${e.finalScore}`,style:{fontFamily:"Arial, sans-serif",fontSize:32,fill:16777215,stroke:{color:0,width:3}}});n.anchor.set(.5),n.position.set(this.config.rendering.canvasWidth/2,250),t.addChild(n);const o=new w({text:`移动次数: ${e.moves}`,style:{fontFamily:"Arial, sans-serif",fontSize:24,fill:16777215,stroke:{color:0,width:2}}});o.anchor.set(.5),o.position.set(this.config.rendering.canvasWidth/2,300),t.addChild(o);const r=this.createButton("重新开始",this.config.rendering.canvasWidth/2-75,370,150,50);r.on("pointerdown",()=>{this.hideGameOverUI(),this.eventBus.emit("game:restart")}),t.addChild(r),this.gameOverMenu=t,this.layers.ui.addChild(t)}hideGameOverUI(){this.gameOverMenu&&(this.layers.ui.removeChild(this.gameOverMenu),this.gameOverMenu.destroy({children:!0}),this.gameOverMenu=null)}destroy(){this.app&&(this.app.destroy(!0,{children:!0,texture:!0}),this.app=null),this.tileSprites.clear(),this.isInitialized=!1,console.log("🗑️  RenderEngine 已清理")}}class X{constructor(e){this.config=e||O,this.textures=new Map,this.isLoaded=!1,this.loadProgress=0}async init(e){console.log("🎨 开始加载纹理资源...");const t=[{alias:"type0",src:"/assets/images/ghosts/ghost-red.png"},{alias:"type1",src:"/assets/images/ghosts/ghost-blue.png"},{alias:"type2",src:"/assets/images/ghosts/ghost-yellow.png"},{alias:"type3",src:"/assets/images/ghosts/ghost-green.png"},{alias:"type4",src:"/assets/images/ghosts/ghost-purple.png"},{alias:"bomb",src:"/assets/images/special/bomb.png"},{alias:"color_bomb",src:"/assets/images/special/color-bomb.png"},{alias:"row_clear",src:"/assets/images/special/row-clear.png"},{alias:"col_clear",src:"/assets/images/special/col-clear.png"}];try{const i=t.map((n,o)=>B.load(n.src).then(r=>(this.loadProgress=(o+1)/t.length*100,e&&e(this.loadProgress),console.log(`  ✅ 加载完成: ${n.alias} (${this.loadProgress.toFixed(0)}%)`),{alias:n.alias,texture:r})));return(await Promise.all(i)).forEach(({alias:n,texture:o})=>{this.textures.set(n,o)}),this.isLoaded=!0,console.log("✅ 所有纹理加载完成！"),!0}catch(i){console.error("❌ 纹理加载失败:",i),await this.retryFailedAssets(t)}}async retryFailedAssets(e,t=3){console.log("🔄 重试加载失败的资源...");for(let i=1;i<=t;i++)try{const s=e.filter(n=>!B.cache.has(n.src));if(s.length===0){console.log("✅ 所有资源加载成功"),this.isLoaded=!0;return}console.log(`  尝试 ${i}/${t}: ${s.length} 个资源`),await Promise.all(s.map(n=>B.load(n.src)))}catch(s){if(i===t)throw console.error("❌ 资源加载失败，已达最大重试次数:",s),new Error("Critical: Asset loading failed after retries");await new Promise(n=>setTimeout(n,1e3*i))}}getTexture(e){if(!this.isLoaded)throw new Error("Textures not loaded yet. Call init() first.");const t=this.textures.get(e);return t||(console.warn(`⚠️  纹理未找到: ${e}`),null)}hasTexture(e){return this.textures.has(e)}getProgress(){return this.loadProgress}}class q{constructor(e,t,i){this.app=e,this.config=t,this.eventBus=i,this.selectedTile=null,this.isEnabled=!0,this.handleTileClick=this.handleTileClick.bind(this),this.handleTilePointerOver=this.handleTilePointerOver.bind(this),this.handleTilePointerOut=this.handleTilePointerOut.bind(this)}init(){this.eventBus.on(h.INPUT_ENABLED,()=>this.enable()),this.eventBus.on(h.INPUT_DISABLED,()=>this.disable()),console.log("✅ InputManager 初始化完成")}addSpriteInteraction(e){e&&(e.eventMode="static",e.cursor="pointer",e.on("pointerdown",this.handleTileClick),e.on("pointerover",this.handleTilePointerOver),e.on("pointerout",this.handleTilePointerOut))}removeSpriteInteraction(e){e&&(e.off("pointerdown",this.handleTileClick),e.off("pointerover",this.handleTilePointerOver),e.off("pointerout",this.handleTilePointerOut))}handleTileClick(e){if(!this.isEnabled)return;const i=e.currentTarget.tileData;if(!i)return;if(!this.selectedTile){this.selectedTile=i,this.eventBus.emit(h.TILE_SELECT,{tile:i,position:{x:i.x,y:i.y}}),console.log(`🎯 选中图标: (${i.x}, ${i.y})`);return}const s=this.selectedTile,n=i;if(s.id===n.id){this.eventBus.emit(h.TILE_DESELECT,{tile:s}),this.selectedTile=null,console.log("❌ 取消选中");return}this.isAdjacent(s,n)?(this.eventBus.emit(h.TILE_DESELECT,{tile:s}),this.selectedTile=null,this.eventBus.emit(h.TILE_SWAP_START,{tile1:s,tile2:n,pos1:{x:s.x,y:s.y},pos2:{x:n.x,y:n.y}}),console.log(`🔄 交换请求: (${s.x}, ${s.y}) <-> (${n.x}, ${n.y})`)):(this.eventBus.emit(h.TILE_DESELECT,{tile:s}),this.selectedTile=n,this.eventBus.emit(h.TILE_SELECT,{tile:n,position:{x:n.x,y:n.y}}),console.log(`⚠️  图标不相邻，重新选中: (${n.x}, ${n.y})`))}handleTilePointerOver(e){if(!this.isEnabled)return;const t=e.currentTarget;t.alpha=.8}handleTilePointerOut(e){if(!this.isEnabled)return;const t=e.currentTarget;t.alpha=1}isAdjacent(e,t){const i=Math.abs(e.x-t.x),s=Math.abs(e.y-t.y);return i===1&&s===0||i===0&&s===1}enable(){this.isEnabled=!0,console.log("✅ 输入已启用")}disable(){this.isEnabled=!1,this.selectedTile&&(this.eventBus.emit(h.TILE_DESELECT,{tile:this.selectedTile}),this.selectedTile=null),console.log("🚫 输入已禁用")}destroy(){this.selectedTile=null,this.isEnabled=!1,console.log("🗑️  InputManager 已清理")}}const A={linear:c=>c,easeInQuad:c=>c*c,easeOutQuad:c=>c*(2-c),easeInOutQuad:c=>c<.5?2*c*c:-1+(4-2*c)*c,easeInCubic:c=>c*c*c,easeOutCubic:c=>{const e=c-1;return e*e*e+1},easeOutBounce:c=>{if(c<1/2.75)return 7.5625*c*c;if(c<2/2.75){const e=c-.5454545454545454;return 7.5625*e*e+.75}else if(c<2.5/2.75){const e=c-.8181818181818182;return 7.5625*e*e+.9375}else{const e=c-.9545454545454546;return 7.5625*e*e+.984375}},easeOutElastic:c=>{if(c===0||c===1)return c;const e=.3;return Math.pow(2,-10*c)*Math.sin((c-e/4)*(2*Math.PI)/e)+1},easeOutBack:c=>1+2.70158*Math.pow(c-1,3)+1.70158*Math.pow(c-1,2)};class v{constructor(e,t,i,s="linear"){this.init(e,t,i,s)}init(e,t,i,s="linear"){if(this.target=e,this.startProps={},this.endProps={},this.propAccessors={},this.duration=i,this.elapsed=0,this.isComplete=!1,this.isPaused=!1,typeof s=="string"?this.easing=A[s]||A.linear:typeof s=="function"?this.easing=s:this.easing=A.linear,e&&t)for(let n in t){const o=this._parsePropertyPath(e,n);o?(this.propAccessors[n]=o,this.startProps[n]=o.get(),this.endProps[n]=t[n]):console.warn(`Tween: 目标对象没有属性 "${n}"`)}this._resolvePromise=null,this._rejectPromise=null,this.promise=new Promise((n,o)=>{this._resolvePromise=n,this._rejectPromise=o})}_parsePropertyPath(e,t){const i=t.split(".");let s=e;for(let o=0;o<i.length-1;o++){if(s[i[o]]===void 0)return null;s=s[i[o]]}const n=i[i.length-1];return s[n]===void 0?null:{get:()=>{let o=e;for(let r=0;r<i.length-1;r++)o=o[i[r]];return o[n]},set:o=>{let r=e;for(let a=0;a<i.length-1;a++)r=r[i[a]];r[n]=o}}}update(e){if(this.isComplete||this.isPaused)return this.isComplete;this.elapsed+=e;const t=Math.min(this.elapsed/this.duration,1);if(t>=1){this.isComplete=!0;for(let s in this.endProps){const n=this.propAccessors[s];n&&n.set(this.endProps[s])}return this._resolvePromise&&this._resolvePromise(this.target),!0}const i=this.easing(t);for(let s in this.endProps){const n=this.startProps[s],o=this.endProps[s],r=this.propAccessors[s];if(n!==void 0&&o!==void 0&&r){const a=n+(o-n)*i;r.set(a)}}return this.isComplete}pause(){this.isPaused=!0}resume(){this.isPaused=!1}stop(){this.isComplete=!0,this._rejectPromise&&this._rejectPromise(new Error("Tween stopped"))}finish(){this.elapsed=this.duration,this.update(0)}getProgress(){return Math.min(this.elapsed/this.duration,1)}isRunning(){return!this.isComplete&&!this.isPaused}}class Q{constructor(e,t){this.eventBus=e,this.config=t,this.activeTweens=[],this.selectionTweens=new Map,this.animationCount=0,this.tweenPool=new $(()=>new v(null,{},0,"linear"),i=>{i.target=null,i.startProps={},i.endProps={},i.elapsed=0,i.isComplete=!1},20)}update(e){if(this.activeTweens.length!==0){for(let t=this.activeTweens.length-1;t>=0;t--){const i=this.activeTweens[t];i.update(e)&&(this.activeTweens.splice(t,1),this.tweenPool&&this.tweenPool.release(i))}this.activeTweens.length===0&&this.animationCount>0&&(this.eventBus.emit(h.ANIMATION_QUEUE_EMPTY),this.animationCount=0)}}_addTween(e){this.activeTweens.push(e),this.animationCount++}_createTween(e,t,i,s="linear"){if(this.tweenPool){const n=this.tweenPool.acquire();return n.init(e,t,i,s),n}else return new v(e,t,i,s)}animateSwap(e,t,i){const s={x:t.position.x,y:t.position.y},n={x:e.position.x,y:e.position.y},o=new v(e.position,s,i,"easeInOutQuad"),r=new v(t.position,n,i,"easeInOutQuad");return this._addTween(o),this._addTween(r),this.eventBus.emit(h.ANIMATION_START,{type:"swap",duration:i}),Promise.all([o.promise,r.promise]).then(()=>{this.eventBus.emit(h.ANIMATION_COMPLETE,{type:"swap"})})}animateRemove(e,t){const i=[];for(const s of e){const n=new v(s,{"scale.x":0,"scale.y":0,alpha:0},t,"easeInQuad");this._addTween(n),i.push(n.promise)}return this.eventBus.emit(h.ANIMATION_START,{type:"remove",duration:t,count:e.length}),Promise.all(i).then(()=>{this.eventBus.emit(h.ANIMATION_COMPLETE,{type:"remove"})})}animateFall(e,t,i){const s=new v(e.position,{y:t},i,"easeOutQuad");return this._addTween(s),s.promise}animateFallBatch(e,t){if(e.length===0)return Promise.resolve();const i=e.map(({sprite:s,targetY:n})=>this.animateFall(s,n,t));return this.eventBus.emit(h.ANIMATION_START,{type:"fall",duration:t,count:e.length}),Promise.all(i).then(()=>{this.eventBus.emit(h.ANIMATION_COMPLETE,{type:"fall"})})}animateSpawn(e,t){for(let n=this.activeTweens.length-1;n>=0;n--){const o=this.activeTweens[n];(o.target===e||o.target===e.scale)&&(o.stop(),this.activeTweens.splice(n,1))}const i=e.normalScale||1;e.scale.set(0),e.alpha=0;const s=new v(e,{"scale.x":i,"scale.y":i,alpha:1},t,"easeOutCubic");return this._addTween(s),s.promise.then(()=>(e.scale.set(i),e.alpha=1,e)).catch(n=>{throw e.scale.set(i),e.alpha=1,n})}animateSpawnBatch(e,t){if(e.length===0)return Promise.resolve();const i=e.map(s=>this.animateSpawn(s,t));return this.eventBus.emit(h.ANIMATION_START,{type:"spawn",duration:t,count:e.length}),Promise.all(i).then(()=>{this.eventBus.emit(h.ANIMATION_COMPLETE,{type:"spawn"})})}animateSelection(e){if(!e)return;this.stopAllSelections();for(let o=this.activeTweens.length-1;o>=0;o--){const r=this.activeTweens[o];(r.target===e||r.target===e.scale||r.target===e.position)&&(r.stop(),this.activeTweens.splice(o,1))}const t=e.normalScale||1;e.scale.set(t),this.selectionTweens.set(e,!0);const i=t*.95,s=t*1.05,n=()=>{if(!this.selectionTweens.has(e))return;const o=new v(e.scale,{x:i,y:i},400,"easeInOutQuad");this._addTween(o),o.promise.then(()=>{if(!this.selectionTweens.has(e)){e.scale.set(t);return}const r=new v(e.scale,{x:s,y:s},400,"easeInOutQuad");this._addTween(r),r.promise.then(()=>{if(!this.selectionTweens.has(e)){e.scale.set(t);return}const a=new v(e.scale,{x:t,y:t},400,"easeInOutQuad");this._addTween(a),a.promise.then(()=>{n()}).catch(()=>{e.scale.set(t)})}).catch(()=>{e.scale.set(t)})}).catch(()=>{e.scale.set(t)})};n()}stopSelection(e){if(!e)return;this.selectionTweens.delete(e);for(let i=this.activeTweens.length-1;i>=0;i--){const s=this.activeTweens[i];(s.target===e.scale||s.target===e.position||s.target===e)&&(s.stop(),this.activeTweens.splice(i,1))}const t=e.normalScale||1;e.scale&&e.scale.set(t),e.alpha!==void 0&&(e.alpha=1)}isAnimating(){return this.activeTweens.length>0}stopAll(){this.activeTweens.forEach(e=>e.stop()),this.activeTweens=[],this.selectionTweens.forEach((e,t)=>{if(t&&t.scale){const i=t.normalScale||1;t.scale.set(i)}}),this.selectionTweens.clear(),this.animationCount=0,console.log("🛑 所有动画已停止")}stopAllSelections(){Array.from(this.selectionTweens.keys()).forEach(t=>{this.stopSelection(t)})}getActiveCount(){return this.activeTweens.length}}class E extends Error{constructor(e,t,i=null){super(t),this.name="GameError",this.type=e,this.details=i,this.timestamp=Date.now()}}const T={INIT_ERROR:"INIT_ERROR",LOGIC_ERROR:"LOGIC_ERROR",RENDER_ERROR:"RENDER_ERROR",ANIMATION_ERROR:"ANIMATION_ERROR",RESOURCE_ERROR:"RESOURCE_ERROR",CONFIG_ERROR:"CONFIG_ERROR",CONTEXT_LOST:"CONTEXT_LOST"};class I{constructor(e=null){this.eventBus=e,this.errorLog=[],this.maxLogSize=50,this.isRecovering=!1}handle(e,t={}){this.logError(e,t),e instanceof E?this.handleGameError(e,t):this.handleGenericError(e,t),this.eventBus&&this.eventBus.emit("error",{type:e.type||"UNKNOWN_ERROR",message:e.message,error:e,context:t})}handleGameError(e,t){switch(console.error(`[${e.type}] ${e.message}`,e.details||""),e.type){case T.INIT_ERROR:this.handleInitError(e,t);break;case T.LOGIC_ERROR:this.handleLogicError(e,t);break;case T.RENDER_ERROR:this.handleRenderError(e,t);break;case T.ANIMATION_ERROR:this.handleAnimationError(e,t);break;case T.RESOURCE_ERROR:this.handleResourceError(e,t);break;case T.CONFIG_ERROR:this.handleConfigError(e,t);break;case T.CONTEXT_LOST:this.handleContextLost(e,t);break;default:this.showErrorMessage("发生未知错误，请刷新页面重试")}}handleGenericError(e,t){console.error("Unexpected error:",e),this.showErrorMessage("发生意外错误，请刷新页面重试")}handleInitError(e,t){this.showErrorMessage("游戏初始化失败",e.message,[{text:"刷新页面",action:()=>window.location.reload()}])}handleLogicError(e,t){if(console.warn("Logic error occurred, attempting to recover..."),t.gameEngine&&!this.isRecovering){this.isRecovering=!0;try{t.gameEngine.reset(),this.showErrorMessage("游戏状态异常，已自动重置","",[],2e3)}catch(i){console.error("Failed to recover:",i),this.showErrorMessage("无法恢复游戏状态，请刷新页面")}finally{this.isRecovering=!1}}}handleRenderError(e,t){if(console.warn("Render error occurred, attempting to recover..."),t.renderEngine&&!this.isRecovering){this.isRecovering=!0;try{t.renderEngine.markDirty&&t.renderEngine.markDirty(),this.showErrorMessage("渲染异常，已尝试恢复","",[],2e3)}catch(i){console.error("Failed to recover render engine:",i),this.showErrorMessage("渲染引擎故障，请刷新页面")}finally{this.isRecovering=!1}}}handleAnimationError(e,t){if(console.warn("Animation error occurred, skipping animation..."),t.animationController)try{t.animationController.stopAll()}catch(i){console.error("Failed to stop animations:",i)}}handleResourceError(e,t){this.showErrorMessage("资源加载失败",e.message,[{text:"重试",action:()=>window.location.reload()},{text:"取消",action:()=>{}}])}handleConfigError(e,t){this.showErrorMessage("配置错误",e.message,[{text:"确定",action:()=>window.location.reload()}])}handleContextLost(e,t){if(console.error("WebGL context lost"),this.showErrorMessage("WebGL上下文丢失","可能是GPU资源不足或驱动问题",[{text:"刷新页面",action:()=>window.location.reload()},{text:"稍后重试",action:()=>{}}]),t.renderEngine&&t.renderEngine.app){const i=t.renderEngine.app.canvas;i&&i.addEventListener("webglcontextrestored",()=>{console.log("WebGL context restored"),window.location.reload()},{once:!0})}}showErrorMessage(e,t="",i=[],s=0){const n=document.createElement("div");n.className="error-overlay",n.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.8);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
    `;const o=document.createElement("div");o.className="error-dialog",o.style.cssText=`
      background: #2c3e50;
      color: #ecf0f1;
      padding: 30px;
      border-radius: 10px;
      max-width: 400px;
      text-align: center;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
    `;const r=document.createElement("h2");r.textContent=e,r.style.cssText=`
      margin: 0 0 15px 0;
      color: #e74c3c;
      font-size: 24px;
    `;const a=document.createElement("p");if(a.textContent=t,a.style.cssText=`
      margin: 0 0 20px 0;
      color: #bdc3c7;
      font-size: 16px;
      line-height: 1.5;
    `,o.appendChild(r),t&&o.appendChild(a),i.length>0){const l=document.createElement("div");l.style.cssText=`
        display: flex;
        gap: 10px;
        justify-content: center;
      `,i.forEach(d=>{const p=document.createElement("button");p.textContent=d.text,p.style.cssText=`
          padding: 10px 20px;
          background: #3498db;
          color: white;
          border: none;
          border-radius: 5px;
          cursor: pointer;
          font-size: 16px;
          transition: background 0.3s;
        `,p.onmouseover=()=>p.style.background="#2980b9",p.onmouseout=()=>p.style.background="#3498db",p.onclick=()=>{document.body.removeChild(n),d.action&&d.action()},l.appendChild(p)}),o.appendChild(l)}n.appendChild(o),document.body.appendChild(n),s>0&&setTimeout(()=>{document.body.contains(n)&&document.body.removeChild(n)},s)}logError(e,t){const i={timestamp:Date.now(),type:e.type||"UNKNOWN",message:e.message,stack:e.stack,context:t};this.errorLog.push(i),this.errorLog.length>this.maxLogSize&&this.errorLog.shift()}getErrorLog(){return[...this.errorLog]}clearErrorLog(){this.errorLog=[]}static validateConfig(e){const t=["board","rendering","animation","scoring","timer"];for(const i of t)if(!e[i])throw new E(T.CONFIG_ERROR,`缺少必需的配置项: ${i}`);if(e.board.rows<4||e.board.rows>20)throw new E(T.CONFIG_ERROR,"游戏板行数必须在4-20之间");if(e.board.cols<4||e.board.cols>20)throw new E(T.CONFIG_ERROR,"游戏板列数必须在4-20之间");if(e.board.tileTypes<3||e.board.tileTypes>10)throw new E(T.CONFIG_ERROR,"图标类型数量必须在3-10之间");if(e.rendering.tileSize<32||e.rendering.tileSize>128)throw new E(T.CONFIG_ERROR,"图标尺寸必须在32-128之间");return!0}}class K{constructor(){this.config=O,this.eventBus=new k,this.errorHandler=new I(this.eventBus),this.performanceMonitor=new V(this.config),this.stateManager=null,this.gameEngine=null,this.boardManager=null,this.matchDetector=null,this.specialTileManager=null,this.renderEngine=null,this.textureFactory=null,this.inputManager=null,this.animationController=null,this.isInitialized=!1,this.setupGlobalErrorHandlers()}setupGlobalErrorHandlers(){window.addEventListener("unhandledrejection",e=>{console.error("Unhandled promise rejection:",e.reason),this.errorHandler.handle(new E(T.LOGIC_ERROR,"未处理的Promise错误",e.reason),{gameEngine:this.gameEngine}),e.preventDefault()}),window.addEventListener("error",e=>{console.error("Global error:",e.error),this.errorHandler.handle(new E(T.LOGIC_ERROR,"全局错误",e.error),{gameEngine:this.gameEngine})})}async init(){try{I.validateConfig(this.config),console.log(`🎮 开始初始化游戏...
`),console.log("📡 初始化事件总线..."),console.log("🎯 初始化状态管理器..."),this.stateManager=new G(g.MENU,this.eventBus),console.log("🎲 初始化游戏板管理器..."),this.matchDetector=new z,this.boardManager=new F(this.config.board.rows,this.config.board.cols,this.config.board.tileTypes,this.matchDetector),console.log("🎯 创建游戏板..."),this.boardManager.createBoard(),this.boardManager.ensureNoInitialMatches(),console.log(`  ✅ 游戏板创建完成: ${this.config.board.rows}x${this.config.board.cols}`),console.log("🎬 初始化动画控制器..."),this.animationController=new Q(this.eventBus,this.config),console.log("✨ 初始化特殊图标管理器..."),this.specialTileManager=new W(this.config,this.boardManager),console.log("⚙️  初始化游戏引擎..."),this.gameEngine=new U(this.config,this.eventBus,this.boardManager,this.matchDetector,this.stateManager,this.animationController,this.specialTileManager),this.gameEngine.init(),console.log(`
🎨 加载纹理资源...`),this.textureFactory=new X(this.config);try{await this.textureFactory.init(t=>{(t%20===0||t===100)&&console.log(`  📦 加载进度: ${t.toFixed(0)}%`)})}catch(t){throw new E(T.RESOURCE_ERROR,"纹理资源加载失败",t)}console.log(`
🖼️  初始化渲染引擎...`);const e=document.getElementById("game-container");if(!e)throw new E(T.INIT_ERROR,"找不到游戏容器元素 #game-container");this.renderEngine=new j(e,this.config,this.eventBus);try{await this.renderEngine.init(),this.renderEngine.app&&this.renderEngine.app.canvas&&this.renderEngine.app.canvas.addEventListener("webglcontextlost",t=>{t.preventDefault(),this.errorHandler.handle(new E(T.CONTEXT_LOST,"WebGL上下文丢失"),{renderEngine:this.renderEngine})})}catch(t){throw new E(T.RENDER_ERROR,"渲染引擎初始化失败",t)}console.log("🎨 创建 UI 元素..."),this.renderEngine.createUI(),console.log("🎨 渲染游戏板..."),this.renderEngine.renderBoard(this.boardManager,this.textureFactory),console.log(`
🎮 初始化输入管理器...`),this.inputManager=new q(this.renderEngine.app,this.config,this.eventBus),this.inputManager.init(),this.renderEngine.tileSprites.forEach(t=>{this.inputManager.addSpriteInteraction(t)}),this.renderEngine.app.ticker.add(t=>{const i=t.deltaMS;this.performanceMonitor.update(i),this.animationController.update(i),this.gameEngine.update(i/1e3)}),this.setupKeyboardListeners(),this.setupEventListeners(),this.performanceMonitor.init(),this.renderEngine.createStartMenu(),this.isInitialized=!0,console.log(`
✨ 游戏初始化完成！
`),console.log('💡 提示: 点击"开始游戏"按钮开始游戏'),console.log("💡 游戏中按 ESC 键暂停/恢复游戏"),this.config.debug.enabled&&(console.log("💡 调试模式已启用"),this.config.debug.showFPS&&console.log("💡 FPS显示已启用（右上角）"))}catch(e){throw console.error("❌ 游戏初始化失败:",e),e instanceof E?this.errorHandler.handle(e,{gameEngine:this.gameEngine,renderEngine:this.renderEngine}):this.errorHandler.handle(new E(T.INIT_ERROR,"游戏初始化失败",e),{gameEngine:this.gameEngine,renderEngine:this.renderEngine}),e}}setupKeyboardListeners(){window.addEventListener("keydown",e=>{if(e.key==="Escape"){const t=this.stateManager.getCurrentState();t==="playing"?(this.eventBus.emit("game:pause"),this.renderEngine.showPauseMenu()):t==="paused"&&(this.eventBus.emit("game:resume"),this.renderEngine.hidePauseMenu())}})}setupEventListeners(){this.eventBus.on("input:enabled",()=>{this.animationController.stopAllSelections(),this.renderEngine.tileSprites.forEach(e=>{if(e&&e.scale&&e.alpha!==void 0){const t=e.normalScale||1;e.scale.set(t),e.alpha=1}})}),this.eventBus.on("tile:select",({tile:e})=>{this.renderEngine.highlightTile(e);const t=this.renderEngine.getTileSprite(e.id);t&&this.animationController.animateSelection(t)}),this.eventBus.on("tile:deselect",({tile:e})=>{if(this.renderEngine.unhighlightTile(),e){const t=this.renderEngine.getTileSprite(e.id);t&&this.animationController.stopSelection(t)}}),this.eventBus.on("tile:swap:start",e=>{const{tile1:t,tile2:i}=e,s=this.renderEngine.getTileSprite(t.id),n=this.renderEngine.getTileSprite(i.id);this.gameEngine.handleSwap({...e,sprite1:s,sprite2:n})}),this.eventBus.on("tile:swap:complete",({tile1:e,tile2:t})=>{this.renderEngine.unhighlightTile();const i=this.renderEngine.getTileSprite(e.id),s=this.renderEngine.getTileSprite(t.id);i&&s&&(this.renderEngine.updateTileSprite(i,e),this.renderEngine.updateTileSprite(s,t))}),this.eventBus.on("tile:swap:revert",({tile1:e,tile2:t})=>{const i=this.renderEngine.getTileSprite(e.id),s=this.renderEngine.getTileSprite(t.id);i&&s&&(this.renderEngine.updateTileSprite(i,e),this.renderEngine.updateTileSprite(s,t))}),this.eventBus.on("match:found",({matches:e,totalTiles:t,comboCount:i})=>{console.log(`✨ 发现匹配: ${e.length} 个匹配，共 ${t} 个图标`),i>1&&console.log(`🔥 连锁 x${i}!`)}),this.eventBus.on("score:update",({score:e,delta:t,combo:i,multiplier:s})=>{console.log(`💰 分数: ${e} (+${t})`),i>1&&(console.log(`   连锁倍数: x${s.toFixed(2)}`),this.renderEngine.particleEffects&&this.renderEngine.particleEffects.createComboBurst(i)),this.renderEngine.updateScore(e)}),this.eventBus.on("tile:remove:start",({tiles:e})=>{e.forEach(t=>{const i=this.renderEngine.getTileSprite(t.id);if(i&&(this.animationController.stopSelection(i),this.renderEngine.particleEffects)){const s=this.config.colors[`type${t.type}`];this.renderEngine.particleEffects.createExplosion(i.x,i.y,s,25)}})}),this.eventBus.on("tile:remove:complete",({tiles:e})=>{e.forEach(t=>{this.renderEngine.removeTileSprite(t.id)})}),this.eventBus.on("tile:fall:start",()=>{}),this.eventBus.on("tile:fall:complete",({movements:e})=>{e.forEach(({tile:t})=>{const i=this.renderEngine.getTileSprite(t.id);if(i){this.renderEngine.updateTileSprite(i,t);const s=i.normalScale||1;i.scale.set(s),i.alpha=1}})}),this.eventBus.on("tile:spawn:start",({tiles:e})=>{e.forEach(t=>{try{const i=this.renderEngine.createTileSprite(t,this.textureFactory);i&&this.inputManager.addSpriteInteraction(i)}catch(i){console.error(`❌ 创建精灵失败 (${t.x}, ${t.y}):`,i)}})}),this.eventBus.on("tile:spawn:complete",({tiles:e})=>{e.forEach(t=>{const i=this.renderEngine.getTileSprite(t.id);if(i){const s=i.normalScale||1;i.scale.set(s),i.alpha=1}})}),this.eventBus.on("board:stable",()=>{console.log("✅ 游戏板稳定")}),this.eventBus.on("special:tile:created",({tile:e,specialType:t,position:i})=>{console.log(`✨ 特殊图标生成: ${t} at (${i.x}, ${i.y})`);const s=this.renderEngine.getTileSprite(e.id);s&&this.renderEngine.updateTileSprite(s,e,this.textureFactory)}),this.eventBus.on("special:tile:activated",({tile:e,targetTile:t,positions:i})=>{if(console.log(`⚡ 特殊图标激活: ${e.specialType}, 影响 ${i.length} 个图标`),this.renderEngine.particleEffects){const s=this.renderEngine.getTileSprite(e.id);s&&this.renderEngine.particleEffects.createSpecialActivation(e.specialType,s.x,s.y)}}),this.eventBus.on("special:combo:activated",({tile1:e,tile2:t,combo:i})=>{console.log(`💥 特殊组合: ${i.description}`)}),this.eventBus.on("board:shuffle:start",()=>{console.log("🔀 开始洗牌...")}),this.eventBus.on("board:shuffle",({score:e,time:t})=>{console.log("🔀 洗牌完成"),this.renderEngine.renderBoard(this.boardManager,this.textureFactory),this.renderEngine.tileSprites.forEach(i=>{this.inputManager.addSpriteInteraction(i)})}),this.eventBus.on("match:found",()=>{this.gameEngine.renderEngine||(this.gameEngine.renderEngine=this.renderEngine)}),this.eventBus.on("game:over",({reason:e,finalScore:t,moves:i})=>{console.log(`
🎮 游戏结束！`),console.log(`   原因: ${e==="no_moves"?"无可用移动":e==="time_up"?"时间到":e}`),console.log(`   最终分数: ${t}`),console.log(`   移动次数: ${i}
`),this.renderEngine.createGameOverUI({finalScore:t,moves:i,reason:e})}),this.eventBus.on("game:start",()=>{this.renderEngine.hideStartMenu(),this.renderEngine.updateScore(0),this.renderEngine.updateTimer(this.config.timer.defaultTime),this.renderEngine.updateMoves(0),this.gameEngine.start()}),this.eventBus.on("timer:update",({time:e})=>{this.renderEngine.updateTimer(e)}),this.eventBus.on("moves:update",({moves:e})=>{this.renderEngine.updateMoves(e)}),this.eventBus.on("game:board:reset",()=>{this.renderEngine.renderBoard(this.boardManager,this.textureFactory),this.renderEngine.tileSprites.forEach(e=>{this.inputManager.addSpriteInteraction(e)}),this.renderEngine.hideGameOverUI(),this.renderEngine.updateScore(0),this.renderEngine.updateTimer(this.config.timer.defaultTime),this.renderEngine.updateMoves(0)}),this.eventBus.on("state:change",({from:e,to:t})=>{console.log(`🔄 状态变化: ${e} -> ${t}`)})}start(){if(!this.isInitialized){console.error("❌ 游戏未初始化");return}console.log('💡 点击"开始游戏"按钮开始游戏')}destroy(){this.config.debug.enabled&&this.performanceMonitor.printReport(),this.renderEngine&&this.renderEngine.destroy(),this.inputManager&&this.inputManager.destroy(),this.performanceMonitor&&this.performanceMonitor.destroy(),console.log("🗑️  游戏已清理")}}const P=new K;P.init().then(()=>{P.start()}).catch(c=>{console.error("❌ 游戏启动失败:",c)});window.game=P;
//# sourceMappingURL=index-5CG2IcUa.js.map
